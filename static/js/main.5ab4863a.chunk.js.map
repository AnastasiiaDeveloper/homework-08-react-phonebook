{"version":3,"sources":["toolkitRedux/contacts-selectors.js","reqToServer/serverApi.js","toolkitRedux/toolkitReducer.js","components/input-comp/add-comp/add-comp.js","components/input-comp/filter-comp/filter.js","components/input-comp/main-block-inp.js","components/list/list.js","components/login-reg/register/register.js","components/login-reg/login/login.js","components/UseMenu.js","App.js","reportWebVitals.js","toolkitRedux/index.js","index.js"],"names":["contactsSelector","createSelector","state","toolkit","contacts","items","getList","filterSelector","filter","loginSelector","login","getLogin","keyAuthSelector","keyAuth","getKeyAuth","dataUserSelector","dataUser","getDataUser","getApiPhone","authKey","axios","get","headers","Authorization","console","log","id","delete","name","num","post","number","pass","email","password","actionLoadData","createAction","data","payload","logOut","actionLogin","req","findContact","find","initialState","JSON","parse","localStorage","getItem","createReducer","action","status","setItem","stringify","token","user","AddComp","useState","setName","setNum","err","setErr","errP","setErrP","a","opacity","position","marginTop","fontSize","transition","marginLeft","background","bordeRadius","color","padding","b","errS","useSelector","key","dispatch","useDispatch","handler","useCallback","p1","p2","p3Arr","trim","setTimeout","arrayTodo","item","length","addPost","addContactThunk","load","loadDataStartApp","useEffect","className","style","type","onChange","ev","target","value","aria-describedby","width","onClick","Filter","filterName","setFilterName","reducerFilter","MainBlockInp","ph","setPh","filS","setFilS","List","setItems","con","useMemo","removeI","deletCont","deletContactThunk","slice","sort","datarr","toLowerCase","indexOf","map","CSSTransition","timeout","classNames","ListGroup","Item","Button","variant","size","deleteI","Container","marginBottom","TransitionGroup","Register","setEmail","p3","alert","signUp","signUpThunk","minLength","Login","setPass","logIn","loginThunk","UseMenu","logout","display","App","window","confirm","exact","path","to","activeStyle","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducers","combineReducers","toolkitReducer","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","concat","createLogger","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5ab4863a.chunk.js","sourcesContent":["import { createSelector } from \"reselect\";\r\n\r\nconst con = (state) => state.toolkit.contacts.items;\r\nconst filter = (state) => state.toolkit.contacts.filter;\r\nconst login = (state) => state.toolkit.contacts.login;\r\nconst keyAuth = (state) => state.toolkit.contacts.keyAuth;\r\nconst dataUser = (state) => state.toolkit.contacts.dataUser;\r\n\r\nexport const contactsSelector = createSelector(con, (getList) => getList);\r\nexport const filterSelector = createSelector(filter, (filter) => filter);\r\nexport const loginSelector = createSelector(login, (getLogin) => getLogin);\r\nexport const keyAuthSelector = createSelector(\r\n  keyAuth,\r\n  (getKeyAuth) => getKeyAuth\r\n);\r\nexport const dataUserSelector = createSelector(\r\n  dataUser,\r\n  (getDataUser) => getDataUser\r\n);\r\n","import axios from \"axios\";\r\nimport {} from \"./../toolkitRedux/contacts-selectors\";\r\nexport class getApiPhone {\r\n  async getList(authKey) {\r\n    try {\r\n      return await axios.get(\r\n        \"https://goit-phonebook-api.herokuapp.com/contacts\",\r\n        {\r\n          headers: {\r\n            \"content-type\": \"application/json\",\r\n            Authorization: authKey,\r\n          },\r\n        }\r\n      );\r\n    } catch {\r\n      console.log(\"для загрузки списка нужно авторизоваться\");\r\n    }\r\n  }\r\n  async deletCont(id, authKey) {\r\n    try {\r\n      return await axios.delete(\r\n        `https://goit-phonebook-api.herokuapp.com/contacts/${id}`,\r\n        {\r\n          headers: {\r\n            \"content-type\": \"application/json\",\r\n            Authorization: authKey,\r\n          },\r\n        }\r\n      );\r\n    } catch {\r\n      console.log(\"ошибка удаления\");\r\n    }\r\n  }\r\n  async addPost(name, num, authKey) {\r\n    try {\r\n      return await axios.post(\r\n        `https://goit-phonebook-api.herokuapp.com/contacts`,\r\n        {\r\n          name: name,\r\n          number: num,\r\n        },\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: authKey,\r\n          },\r\n        }\r\n      );\r\n    } catch {\r\n      console.log(\"new post add err\");\r\n    }\r\n  }\r\n  async signUp(name, pass, email) {\r\n    try {\r\n      return await axios.post(\r\n        `https://goit-phonebook-api.herokuapp.com/users/signup`,\r\n        {\r\n          name: name,\r\n          email: email,\r\n          password: pass,\r\n        }\r\n      );\r\n    } catch {\r\n      console.log(`пользователь с логином ${name} уже есть в базе `);\r\n    }\r\n  }\r\n  async logIn(email, password) {\r\n    try {\r\n      return await axios.post(\r\n        `https://goit-phonebook-api.herokuapp.com/users/login`,\r\n        {\r\n          email: email,\r\n          password: password,\r\n        }\r\n      );\r\n    } catch {\r\n      console.log(\"новый юзер небыл auth\");\r\n    }\r\n  }\r\n}\r\n","import { createAction, createReducer } from \"@reduxjs/toolkit\";\r\nimport { getApiPhone } from \"./../reqToServer/serverApi\";\r\n\r\nexport const actionLoadData = createAction(\r\n  \"ACTION_DATA\",\r\n  function prepare(data) {\r\n    return {\r\n      payload: {\r\n        data,\r\n      },\r\n    };\r\n  }\r\n);\r\nexport const logOut = createAction(\"LOG_OUT\");\r\n\r\nexport const actionLogin = createAction(\"login\", function prepare(req) {\r\n  return {\r\n    payload: {\r\n      req,\r\n    },\r\n  };\r\n});\r\n\r\nexport const findContact = createAction(\"FILTER\", function prepare(find) {\r\n  return {\r\n    payload: {\r\n      find,\r\n    },\r\n  };\r\n});\r\nexport const addContactThunk = (p1, p2, key) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      await new getApiPhone().addPost(p1, p2, key);\r\n\r\n      const data = await new getApiPhone().getList(key);\r\n      return dispatch(actionLoadData(data));\r\n    } catch {\r\n      console.log(\"error add cont\");\r\n    }\r\n  };\r\n};\r\nexport const signUpThunk = (p1, p2, p3) => {\r\n  return async () => {\r\n    try {\r\n      const data = await new getApiPhone().signUp(p1, p2, p3);\r\n      console.log(\"thunk\", data);\r\n    } catch {\r\n      console.log(\"error add user\");\r\n    }\r\n  };\r\n};\r\nexport const loginThunk = (email, password) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const data = await new getApiPhone().logIn(email, password);\r\n      return dispatch(actionLogin(data));\r\n    } catch {\r\n      alert(\"error login\");\r\n      console.log(\"error login\");\r\n    }\r\n  };\r\n};\r\nexport const deletContactThunk = (id, key) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      await new getApiPhone().deletCont(id, key);\r\n\r\n      const data = await new getApiPhone().getList(key);\r\n      return dispatch(actionLoadData(data));\r\n    } catch {\r\n      console.log(\"error delet cont\");\r\n    }\r\n  };\r\n};\r\nexport const loadDataStartApp = (key) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const data = await new getApiPhone().getList(key);\r\n      return dispatch(actionLoadData(data));\r\n    } catch {\r\n      console.log(\"error get list\");\r\n    }\r\n  };\r\n};\r\nconst initialState = {\r\n  contacts: {\r\n    items: [],\r\n    filter: \"\",\r\n    login: JSON.parse(localStorage.getItem(\"login\")) || false,\r\n    keyAuth: JSON.parse(localStorage.getItem(\"key\")) || \"\",\r\n    dataUser: JSON.parse(localStorage.getItem(\"data\")) || null,\r\n  },\r\n};\r\nexport default createReducer(initialState, {\r\n  [actionLoadData]: function (state, action) {\r\n    state.contacts.items = action.payload.data.data;\r\n  },\r\n  [actionLogin]: function (state, action) {\r\n    if (action.payload.req.status === 200) {\r\n      localStorage.setItem(\r\n        \"key\",\r\n        JSON.stringify(action.payload.req.data.token)\r\n      );\r\n      localStorage.setItem(\"login\", \"true\");\r\n      localStorage.setItem(\r\n        \"data\",\r\n        JSON.stringify(action.payload.req.data.user)\r\n      );\r\n      console.log(\"action\", action);\r\n      state.contacts.login = true;\r\n      state.contacts.keyAuth = action.payload.req.data.token;\r\n      state.contacts.dataUser = action.payload.req.data.user;\r\n    }\r\n  },\r\n  [findContact]: function (state, action) {\r\n    state.contacts.filter = action.payload.find;\r\n  },\r\n  [logOut]: function (state) {\r\n    localStorage.setItem(\"login\", \"false\");\r\n    state.contacts.login = false;\r\n    state.contacts.keyAuth = \"\";\r\n    state.contacts.dataUser = \"\";\r\n  },\r\n});\r\n\r\n\r\n\r\n","import React, { useState, useCallback, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  contactsSelector,\r\n  keyAuthSelector,\r\n} from \"./../../../toolkitRedux/contacts-selectors\";\r\nimport {\r\n  addContactThunk,\r\n  loadDataStartApp,\r\n} from \"./../../../toolkitRedux/toolkitReducer\";\r\n\r\nconst AddComp = () => {\r\n  const [name, setName] = useState(\"\");\r\n  const [num, setNum] = useState(\"\");\r\n  const [err, setErr] = useState(false);\r\n  const [errP, setErrP] = useState(false);\r\n  const [errS] = useState({\r\n    a: {\r\n      opacity: 0,\r\n      position: \"absolute\",\r\n      marginTop: \"-60px\",\r\n      fontSize: \"1.3em\",\r\n      transition: \"2s\",\r\n      marginLeft: \"500px\",\r\n      background: \"red\",\r\n      bordeRadius: \"10px\",\r\n      color: \"white\",\r\n      padding: \"4px\",\r\n    },\r\n    b: {\r\n      opacity: 1,\r\n      position: \"absolute\",\r\n      marginTop: \"-60px\",\r\n      marginLeft: \"0px\",\r\n      fontSize: \"1.3em\",\r\n      transition: \"2s\",\r\n      background: \"red\",\r\n      bordeRadius: \"10px\",\r\n      color: \"white\",\r\n      padding: \"4px\",\r\n    },\r\n  });\r\n  const contacts = useSelector(contactsSelector);\r\n  const key = useSelector(keyAuthSelector);\r\n\r\n  const dispatch = useDispatch();\r\n  const handler = useCallback(\r\n    (p1, p2, p3Arr) => {\r\n      if (p1.trim() === \"\" || p2.trim() === \"\") {\r\n        setErrP(true);\r\n        setTimeout(() => {\r\n          setErrP(false);\r\n        }, 3000);\r\n      } else {\r\n        // проверка\r\n        const filterSearch = (arrayTodo) => {\r\n          return arrayTodo.filter((item) => {\r\n            return item.name === p1;\r\n          });\r\n        };\r\n        if (filterSearch(p3Arr).length > 0) {\r\n          setErr(true);\r\n          setTimeout(() => {\r\n            setErr(false);\r\n          }, 3000);\r\n        } else {\r\n          // dispatch(addContact(p1, p2));\r\n          dispatch(addContactThunk(p1, p2, key));\r\n        }\r\n      }\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  const actionName = (ev) => {\r\n    setName(ev.target.value);\r\n  };\r\n  const actionNum = (ev) => {\r\n    setNum(ev.target.value);\r\n  };\r\n  const sendDataTuRedux = () => {\r\n    handler(name, num, contacts);\r\n  };\r\n  const load = useCallback(() => {\r\n    dispatch(loadDataStartApp(key));\r\n  }, [dispatch]);\r\n  useEffect(() => {\r\n    load();\r\n  }, []);\r\n  return (\r\n    <div>\r\n      <div className=\"form-group\">\r\n        <p style={err ? errS.b : errS.a}>\r\n          {\" \"}\r\n          {name} пользователь уже зарегестрирован\r\n        </p>\r\n        <p style={errP ? errS.b : errS.a}> заполните все поля</p>\r\n        <label>Name</label>\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          onChange={actionName}\r\n          value={name}\r\n          aria-describedby=\"emailHelp\"\r\n        />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label>Number</label>\r\n        <input\r\n          type=\"number\"\r\n          className=\"form-control\"\r\n          onChange={actionNum}\r\n          value={num}\r\n        />\r\n      </div>\r\n      <button\r\n        style={{ width: \"100%\" }}\r\n        type=\"submit\"\r\n        className=\"btn btn-dark\"\r\n        onClick={() => sendDataTuRedux()}\r\n      >\r\n        Add contact\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\nexport default AddComp;\r\n","import React, { useState, useCallback, useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { findContact } from \"./../../../toolkitRedux/toolkitReducer\";\r\n\r\nconst Filter = () => {\r\n  const [filterName, setFilterName] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n  const reducerFilter = useCallback((p1) => {\r\n    dispatch(findContact(p1));\r\n  }, []);\r\n\r\n  const actionFilter = (ev) => {\r\n    setFilterName(ev.target.value);\r\n  };\r\n  useEffect(() => {\r\n    reducerFilter(filterName);\r\n  }, [filterName]);\r\n  return (\r\n    <div className=\"form-group filtDiv\">\r\n      <label>Find contacts by name</label>\r\n      <input\r\n        type=\"text\"\r\n        className=\"form-control\"\r\n        onChange={actionFilter}\r\n        value={filterName}\r\n        aria-describedby=\"emailHelp\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\nexport default Filter;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport AddComp from \"./add-comp/add-comp\";\r\nimport Filter from \"./filter-comp/filter\";\r\nimport { useSelector } from \"react-redux\";\r\nimport \"./mainAdd.css\";\r\nconst MainBlockInp = () => {\r\n  const [ph, setPh] = useState({\r\n    marginLeft: \"-400px\",\r\n  });\r\n  const [filS, setFilS] = useState(false);\r\n  const contacts = useSelector((state) => state.toolkit.contacts.items);\r\n  let test = \"\";\r\n  useEffect(() => {\r\n    if (contacts.length > 0) {\r\n      setFilS(true);\r\n    } else {\r\n      setFilS(false);\r\n    }\r\n  }, [contacts]);\r\n  useEffect(() => {\r\n    if (contacts.length > 0) {\r\n      setFilS(true);\r\n    }\r\n    setPh({ marginLeft: \"0px\", transition: \"1s\" });\r\n  }, []);\r\n  return (\r\n    <div>\r\n      <div className=\"phone\">\r\n        <p style={ph}>PhoneBook</p>\r\n      </div>\r\n      <div className=\"mainAdd\">\r\n        <AddComp />\r\n      </div>\r\n      {filS ? <Filter /> : null}\r\n    </div>\r\n  );\r\n};\r\nexport default MainBlockInp;\r\n","import React, { useState, useEffect, useCallback, useMemo } from \"react\";\r\nimport { Container, ListGroup, Button } from \"react-bootstrap\";\r\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { deletContactThunk } from \"./../../toolkitRedux/toolkitReducer\";\r\nimport {\r\n  contactsSelector,\r\n  filterSelector,\r\n  keyAuthSelector,\r\n} from \"./../../toolkitRedux/contacts-selectors\";\r\nimport \"./list.css\";\r\n\r\nconst List = () => {\r\n  const [items, setItems] = useState([]);\r\n  const dispatch = useDispatch();\r\n  const a = useSelector(contactsSelector);\r\n  const con = useMemo(() => a);\r\n  const filter = useSelector(filterSelector);\r\n  const key = useSelector(keyAuthSelector);\r\n  const removeI = useCallback(\r\n    (id) => {\r\n      dispatch(deletContactThunk(id, key));\r\n    },\r\n    [dispatch]\r\n  );\r\n  const deleteI = (id) => {\r\n    removeI(id);\r\n  };\r\n  useEffect(() => {\r\n    console.log(con.length);\r\n    if (con.length === 0) {\r\n      setItems(con);\r\n    } else {\r\n      setItems(con.slice().sort((a, b) => b.id - a.id));\r\n    }\r\n\r\n    console.log(con);\r\n  }, [con]);\r\n  const filterSearch = (arrayTodo) => {\r\n    if (filter === \"\") {\r\n      return arrayTodo;\r\n    } else {\r\n      return arrayTodo.filter((item) => {\r\n        return item.name.toLowerCase().indexOf(filter.toLowerCase()) > -1;\r\n      });\r\n    }\r\n  };\r\n  const datarr = filterSearch(items).map(({ id, name, number }) => {\r\n    return (\r\n      <CSSTransition key={id} timeout={500} classNames=\"item\">\r\n        <ListGroup.Item className=\"li\">\r\n          <p>{name}</p> <p> {number}</p>\r\n          <Button\r\n            className=\"remove-btn\"\r\n            variant=\"danger\"\r\n            size=\"sm\"\r\n            onClick={() => deleteI(id)}\r\n          >\r\n            &times;\r\n          </Button>\r\n        </ListGroup.Item>\r\n      </CSSTransition>\r\n    );\r\n  });\r\n  if (items.length === 0) {\r\n    return <div style={{ marginTop: \"20px\" }}>записей не найдено</div>;\r\n  }\r\n  return (\r\n    <Container style={{ marginTop: \"2rem\" }}>\r\n      <ListGroup style={{ marginBottom: \"1rem\" }}>\r\n        <TransitionGroup className=\"todo-list\">{datarr}</TransitionGroup>\r\n      </ListGroup>\r\n    </Container>\r\n  );\r\n};\r\nexport default List;\r\n","import React, { useState, useCallback, useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n  loadDataStartApp,\r\n  signUpThunk,\r\n} from \"../../../toolkitRedux/toolkitReducer\";\r\n\r\nconst Register = () => {\r\n  const [name, setName] = useState(\"\");\r\n  const [num, setNum] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n  const handler = useCallback(\r\n    (p1, p2, p3) => {\r\n      if (p2.length < 8) {\r\n        alert(\"длина пароля должна быть не менее 8 символов\");\r\n      } else {\r\n        dispatch(signUpThunk(p1, p2, p3));\r\n        setName(\"\");\r\n        setNum(\"\");\r\n        setEmail(\"\");\r\n        alert(\"вы успешно зарегистрированы\");\r\n      }\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  const actionName = (ev) => {\r\n    setName(ev.target.value);\r\n  };\r\n  const actionNum = (ev) => {\r\n    setNum(ev.target.value);\r\n  };\r\n  const actionEmail = (ev) => {\r\n    setEmail(ev.target.value);\r\n  };\r\n  const sendDataTuRedux = () => {\r\n    handler(name, num, email);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"form-group\">\r\n        <div className=\"form-group\">\r\n          <label>login</label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            onChange={actionName}\r\n            value={name}\r\n          />\r\n        </div>\r\n        <label>email</label>\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          onChange={actionEmail}\r\n          value={email}\r\n          aria-describedby=\"emailHelp\"\r\n        />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label>password</label>\r\n        <input\r\n          type=\"password\"\r\n          className=\"form-control\"\r\n          onChange={actionNum}\r\n          value={num}\r\n          minLength=\"8\"\r\n        />\r\n      </div>\r\n      <button\r\n        style={{ width: \"100%\" }}\r\n        type=\"submit\"\r\n        className=\"btn btn-dark\"\r\n        onClick={() => sendDataTuRedux()}\r\n      >\r\n        sign up\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\nexport default Register;\r\n","import React, { useState, useCallback, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { contactsSelector } from \"../../../toolkitRedux/contacts-selectors\";\r\nimport { loginThunk } from \"../../../toolkitRedux/toolkitReducer\";\r\n\r\nconst Login = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [pass, setPass] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n  const handler = useCallback(\r\n    (p1, p2) => {\r\n      if (p2.length < 8) {\r\n        alert(\"длина пароля должна быть не менее 8 символов\");\r\n      } else {\r\n        dispatch(loginThunk(p1, p2));\r\n        setEmail(\"\");\r\n        setPass(\"\");\r\n      }\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  const actionEmail = (ev) => {\r\n    setEmail(ev.target.value);\r\n  };\r\n  const actionPass = (ev) => {\r\n    setPass(ev.target.value);\r\n  };\r\n  const sendDataTuRedux = () => {\r\n    handler(email, pass);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"form-group\">\r\n        <label>email</label>\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          onChange={actionEmail}\r\n          value={email}\r\n          aria-describedby=\"emailHelp\"\r\n        />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label>password</label>\r\n        <input\r\n          type=\"password\"\r\n          className=\"form-control\"\r\n          onChange={actionPass}\r\n          value={pass}\r\n        />\r\n      </div>\r\n      <button\r\n        style={{ width: \"100%\" }}\r\n        type=\"submit\"\r\n        className=\"btn btn-dark\"\r\n        onClick={() => sendDataTuRedux()}\r\n      >\r\n        login\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\nexport default Login;\r\n","import React from \"react\";\r\nconst UseMenu = ({ data, logout }) => {\r\n  return (\r\n    <div style={{ display: \"flex\", marginTop: \"5px\", marginLeft: \"10px\" }}>\r\n      {\" \"}\r\n      <button type=\"button\" className=\"btn btn-danger\" onClick={logout}>\r\n        logout\r\n      </button>\r\n      <p style={{ marginTop: \"5px\", marginLeft: \"10px\" }}>\r\n        You are logged in as: {data.name}\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\nexport default UseMenu;\r\n","import React, { useCallback } from \"react\";\nimport \"./App.css\";\nimport MainBlockInp from \"./components/input-comp/main-block-inp\";\nimport List from \"./components/list/list\";\nimport Register from \"./components/login-reg/register/register\";\nimport Login from \"./components/login-reg/login/login\";\nimport { NavLink, Route, Redirect } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  loginSelector,\n  dataUserSelector,\n} from \"./toolkitRedux/contacts-selectors\";\nimport { logOut } from \"./toolkitRedux/toolkitReducer\";\nimport UseMenu from \"./components/UseMenu\";\n\nfunction App() {\n  const a = useSelector(loginSelector);\n  const data = useSelector(dataUserSelector);\n  const dispatch = useDispatch();\n  const logout = useCallback(() => {\n    if (window.confirm(`Вы действительно хотите выйти?`)) {\n      dispatch(logOut());\n    }\n  }, [dispatch]);\n  return (\n    <div className=\"App\">\n      <div className=\"center\">\n        <Route exact path=\"/\">\n          <>\n            <Redirect to=\"/login\" />\n          </>\n        </Route>\n        {a ? (\n          <UseMenu data={data} logout={logout} />\n        ) : (\n          <>\n            <NavLink to=\"/register\" activeStyle={{ color: \"blue\" }}>\n              <button type=\"button\" className=\"btn btn-primary\">\n                sign up\n              </button>\n            </NavLink>\n            <NavLink\n              style={{ marginLeft: \"5px\" }}\n              to=\"/login\"\n              activeStyle={{ color: \"blue\" }}\n            >\n              <button type=\"button\" className=\"btn btn-success\">\n                login\n              </button>\n            </NavLink>\n          </>\n        )}\n        <Route exact path=\"/register\">\n          {a ? (\n            <>\n              <Redirect to=\"/contacts\" />\n            </>\n          ) : (\n            <Register />\n          )}\n        </Route>\n        <Route exact path=\"/login\">\n          {a ? (\n            <>\n              <Redirect to=\"/contacts\" />\n            </>\n          ) : (\n            <Login />\n          )}\n        </Route>\n        <Route exact path=\"/contacts\">\n          {a ? (\n            <>\n              <MainBlockInp />\n              <List />\n            </>\n          ) : (\n            <Redirect to=\"/login\" />\n          )}\n        </Route>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {\r\n  combineReducers,\r\n  configureStore,\r\n  getDefaultMiddleware,\r\n} from \"@reduxjs/toolkit\";\r\nimport { createLogger } from \"redux-logger\";\r\nimport toolkitReducer from \"./toolkitReducer\";\r\nconst rootReducers = combineReducers({\r\n  toolkit: toolkitReducer,\r\n});\r\nexport const store = configureStore({\r\n  reducer: rootReducers,\r\n  middleware: getDefaultMiddleware({\r\n    serializableCheck: false,\r\n  }).concat([createLogger()]),\r\n});\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./toolkitRedux\";\nimport { BrowserRouter } from \"react-router-dom\";\n// const store = createStore(rootReducer);\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}